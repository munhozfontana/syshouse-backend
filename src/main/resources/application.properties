# Configuration file
# key=value

# configure your datasource

%test.quarkus.datasource.db-kind=h2
%test.quarkus.datasource.jdbc.url=jdbc:h2:tcp://localhost/mem:test
%test.quarkus.datasource.username=developer
%test.quarkus.datasource.password=developer
%test.quarkus.hibernate-orm.database.generation=drop-and-create
%test.quarkus.hibernate-orm.sql-load-script=carga_teste.sql



%dev.quarkus.datasource.db-kind = postgresql
%dev.quarkus.datasource.jdbc.url = jdbc:postgresql://localhost:5432/dev
%dev.quarkus.hibernate-orm.database.generation = update
%dev.quarkus.datasource.username = postgres
%dev.quarkus.datasource.password = postgres
%dev.quarkus.http.port=8080


# PROD
%prod.quarkus.datasource.db-kind = postgresql
%prod.quarkus.datasource.username = ${DATABASE_USER}
%prod.quarkus.datasource.password =  ${DATABASE_PASSWORD}
%prod.quarkus.datasource.jdbc.url = jdbc:postgresql://${DATABASE_HOST}:${DATABASE_PORT}/${DATABASE_NAME}

%prod.quarkus.hibernate-orm.database.generation = drop-and-create
%prod.quarkus.http.port=${PORT:5000}


quarkus.hibernate-orm.log.sql=true
quarkus.swagger-ui.always-include=true
quarkus.swagger-ui.path=/api





# docker run --name=db -e POSTGRES_DB=dev -e POSTGRES_PASSWORD=postgres -d -p 5432:5432/tcp  postgres
# docker run --link db:db -i --rm -p 8080:8080 quarkus/system-rendas-jvm

